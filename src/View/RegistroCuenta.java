/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ConexionBD;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class RegistroCuenta extends javax.swing.JFrame {

    /**
     * Creates new form RegistroCuenta
     */
    public RegistroCuenta() {
        initComponents();
        try {
            llenaCamas();
            fechas();
            FIngreso.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sex = new javax.swing.ButtonGroup();
        sexNac = new javax.swing.ButtonGroup();
        Nombre = new javax.swing.JTextField();
        ApellidoP = new javax.swing.JTextField();
        ApellidoS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Limpiar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Alergias = new javax.swing.JTextArea();
        FAlta = new com.toedter.calendar.JDateChooser();
        FCirugia = new com.toedter.calendar.JDateChooser();
        FIngreso = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        MIngreso = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        Atras = new javax.swing.JButton();
        RFC = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        sexFem = new javax.swing.JRadioButton();
        sexMas = new javax.swing.JRadioButton();
        sexOt = new javax.swing.JRadioButton();
        sexNacFem = new javax.swing.JRadioButton();
        sexNacMas = new javax.swing.JRadioButton();
        sexNacOt = new javax.swing.JRadioButton();
        camas = new javax.swing.JComboBox<>();
        Familiar = new javax.swing.JButton();
        Medico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingreso a piso");
        setSize(new java.awt.Dimension(670, 390));

        Nombre.setToolTipText("");
        Nombre.setName(""); // NOI18N

        jLabel1.setText("Nombre(s)");

        jLabel2.setText("Primer Apellido");

        jLabel3.setText("Segundo Apellido*");

        jLabel4.setText("Motivo de ingreso");

        jLabel5.setText("Fecha-Ingreso");

        jLabel6.setText("Fecha-Cirugía*");

        jLabel7.setText("Cama Asignada");

        jLabel8.setText("Fecha-Alta*");

        jLabel9.setText("Sexo");

        jLabel10.setText("Sexo de Nacimiento*");

        jLabel11.setText("Alergías");

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        Guardar.setText("Registrar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Alergias.setColumns(20);
        Alergias.setRows(5);
        jScrollPane2.setViewportView(Alergias);

        FAlta.setDateFormatString("dd/MM/yyyy");

        MIngreso.setColumns(20);
        MIngreso.setRows(5);
        jScrollPane3.setViewportView(MIngreso);

        jLabel15.setText("DATOS DEL PACIENTE");
        jLabel15.setBorder(new javax.swing.border.MatteBorder(null));

        Atras.setText("Atras");

        RFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RFCKeyPressed(evt);
            }
        });

        jLabel16.setText("RFC");

        sex.add(sexFem);
        sexFem.setText("Femenino");

        sex.add(sexMas);
        sexMas.setText("Masculino");

        sex.add(sexOt);
        sexOt.setText("Otro");

        sexNac.add(sexNacFem);
        sexNacFem.setText("Femenino");

        sexNac.add(sexNacMas);
        sexNacMas.setText("Masculino");

        sexNac.add(sexNacOt);
        sexNacOt.setText("Otro");

        Familiar.setText("Contacto familiar");
        Familiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FamiliarActionPerformed(evt);
            }
        });

        Medico.setText("Medico personal");
        Medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Atras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Limpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Guardar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ApellidoS, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FCirugia, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RFC, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sexFem)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sexMas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sexOt))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexNacFem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexNacMas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexNacOt)))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Familiar)
                                    .addGap(18, 18, 18)
                                    .addComponent(Medico))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(camas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(RFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(ApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ApellidoS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(sexFem)
                            .addComponent(sexMas)
                            .addComponent(sexOt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(sexNacFem)
                            .addComponent(sexNacMas)
                            .addComponent(sexNacOt))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(FIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(FCirugia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(FAlta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(camas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Atras)
                            .addComponent(Limpiar)
                            .addComponent(Guardar))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Medico)
                            .addComponent(Familiar))
                        .addGap(78, 78, 78))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        if(JOptionPane.showConfirmDialog(rootPane, "¿Desea limpiar los campos llenados?", "Limpiar", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null) == 0){
            limpiaDatos();
        }
    }//GEN-LAST:event_LimpiarActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        
         if(Nombre.getText()==null||ApellidoP.getText()==null||MIngreso.getText()==null||Alergias.getText()==null||FIngreso.getDate()==null||RFC.getText()==null){
            JOptionPane.showMessageDialog(null, "Todos los datos sin asterisco son obligatorios", "Advertencia", JOptionPane.WARNING_MESSAGE);
         }else{
             try {
                ingresaBD();
                camas.removeAllItems();
                llenaCamas();
             } catch (SQLException ex) {
                Logger.getLogger(RegistroCuenta.class.getName()).log(Level.SEVERE, null, ex);
             }
            limpiaDatos();
         }
         
    }//GEN-LAST:event_GuardarActionPerformed

    private void RFCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RFCKeyPressed
        if(evt.getKeyCode() == 27){
            try {
                verificaAlta();
            } catch (SQLException ex) {
                Logger.getLogger(RegistroCuenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_RFCKeyPressed

    private void FamiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FamiliarActionPerformed
        // TODO add your handling code here:
        RegistroFamiliares re = new RegistroFamiliares();
        re.setVisible(true);
    }//GEN-LAST:event_FamiliarActionPerformed

    private void MedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicoActionPerformed
        // TODO add your handling code here:
        RegistroMedicos rm = new RegistroMedicos();
        rm.setVisible(true);
    }//GEN-LAST:event_MedicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroCuenta().setVisible(true);
            }
        });
    }

    @Override
    public void setBounds(Rectangle rctngl) {
        super.setBounds(rctngl); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void fechas(){
        Date fe = new Date(System.currentTimeMillis());
        
        FIngreso.setDate(fe);
        
        FAlta.setMinSelectableDate(fe);
        FCirugia.setMinSelectableDate(fe);
    }
    
    private void limpiaDatos(){
        Nombre.setText("");
        ApellidoP.setText("");
        ApellidoS.setText("");
        MIngreso.setText("");
        FIngreso.setDate(null);
        MIngreso.setText("");
        FCirugia.setDate(null);
        FAlta.setDate(null);
        Alergias.setText("");
        RFC.setText("");
        sex.clearSelection();
        sexNac.clearSelection();
    }
    
    private void ingresaBD() throws SQLException{
        
        ConexionBD con = new ConexionBD();
        Connection conecta;
        String se = "O", sen = "O";
        int a,m,d,c;
        String fechaI, fechaO, fechaA, cam;
        
        fechaO = null;
        fechaA = null;
        
        a = FIngreso.getCalendar().get(Calendar.YEAR);
        m = FIngreso.getCalendar().get(Calendar.MARCH);
        d = FIngreso.getCalendar().get(Calendar.DAY_OF_MONTH);
        fechaI = (a+"-"+m+"-"+d);
        if(FCirugia.getDate() != null){
            a = FCirugia.getCalendar().get(Calendar.YEAR);
            m = FCirugia.getCalendar().get(Calendar.MARCH);
            d = FCirugia.getCalendar().get(Calendar.DAY_OF_MONTH);
            fechaO = (a+"-"+m+"-"+d);
        }
        if(FAlta.getCalendar() != null){
            a = FAlta.getCalendar().get(Calendar.YEAR);
            m = FAlta.getCalendar().get(Calendar.MARCH);
            d = FAlta.getCalendar().get(Calendar.DAY_OF_MONTH);
            fechaA = (a+"-"+m+"-"+d);
        }
                
        if(sexFem.isSelected()){
            se = "F";
        }
        else if(sexMas.isSelected()){
            se = "M";
        }
        else if(sexOt.isSelected()){
            se = "O";
        }
        
        if(sexNacFem.isSelected()){
            sen = "F";
        }
        else if(sexNacMas.isSelected()){
            sen = "M";
        }
        else if(sexNacOt.isSelected()){
            sen = "O";
        }
        
        cam = camas.getItemAt(camas.getSelectedIndex());
        c = Integer.parseInt(cam);
        
        conecta = con.getConnection();
        PreparedStatement ps;
        
        ps = conecta.prepareStatement("UPDATE camas SET status=(?) WHERE num_cama=(?)");
        ps.setInt(1, 1);
        ps.setInt(2, c);
        ps.executeUpdate();
        
        ps = conecta.prepareStatement("INSERT INTO ingreso_piso(RFC,NombrePac,Apellido1,"
                + "Apellido2,MotivoIngreso,FechaIngreso,FechaCirugia,FechaAlta,Sexo,"
                + "SexoNac,Alegias,Cama) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");
        
        ps.setString(1, RFC.getText());
        ps.setString(2, Nombre.getText());
        ps.setString(3, ApellidoP.getText());
        ps.setString(4, ApellidoS.getText());
        ps.setString(5, MIngreso.getText());
        ps.setString(6, fechaI);
        ps.setString(7, fechaO);
        ps.setString(8, fechaA);
        ps.setString(9, se);
        ps.setString(10, sen);
        ps.setString(11, Alergias.getText());
        ps.setInt(12, c);
        
        ps.executeUpdate();
        
        ps = conecta.prepareStatement("INSERT INTO cuenta(RFC_paciente,Cama,Cuarto) VALUES(?,?,?)");
        ps.setString(1, RFC.getText());
        ps.setInt(2, c);
        ps.setInt(3, c);
        ps.executeUpdate();
        
        conecta.close();
        
        JOptionPane.showMessageDialog(null, "Datos guardados en la base de datos", "Datos guardados", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void llenaCamas() throws SQLException{
        
        ConexionBD con = new ConexionBD();
        Connection conecta;
        ResultSet res;
        String camaN;
        
        conecta = con.getConnection();
        PreparedStatement ps;
        
        ps = conecta.prepareStatement("SELECT num_cama FROM Camas WHERE status = 0");
        res = ps.executeQuery();
        
        camas.addItem("..."); 
        
        while(res.next()){
            camaN = Integer.toString(res.getInt("num_cama"));
            camas.addItem(camaN);
        }
        
        conecta.close();
    }
    
    private void verificaAlta() throws SQLException{
        
        ConexionBD con = new ConexionBD();
        Connection conecta;
        ResultSet res;
        
        conecta = con.getConnection();
        PreparedStatement ps;
        
        ps = conecta.prepareStatement("SELECT * FROM ingreso_piso WHERE RFC = (?)");
        ps.setString(1, RFC.getText());
        res = ps.executeQuery();
        
        if(res.next()){
            JOptionPane.showMessageDialog(null, "El paciente ya cuenta con previo registro en la clinica", "Paciente Registrado", JOptionPane.INFORMATION_MESSAGE);
            
            Nombre.setText(res.getString("NombrePac"));
            ApellidoP.setText(res.getString("Apellido1"));
            ApellidoS.setText(res.getString("Apellido2"));
            //Alergias.setText("");
            //MedicoN.setText("");
           // MedicoT.setText("");
           if(res.getString("Sexo").equals("M")){
               sexMas.setSelected(true);
           }
           else if(res.getString("Sexo").equals("F")){
               sexFem.setSelected(true);
           }
           else if(res.getString("Sexo").equals("O")){
               sexOt.setSelected(true);
           }
           
           if(res.getString("SexoNac").equals("M")){
               sexNacMas.setSelected(true);
           }
           else if(res.getString("SexoNac").equals("F")){
               sexNacFem.setSelected(true);
           }
           else if(res.getString("SexoNac").equals("O")){
               sexNacOt.setSelected(true);
           }
        }
        else{
            JOptionPane.showMessageDialog(null, "El paciente NO cuenta con previo registro en la clinica", "Paciente NO Registrado", JOptionPane.INFORMATION_MESSAGE);
        }
        
        conecta.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Alergias;
    private javax.swing.JTextField ApellidoP;
    private javax.swing.JTextField ApellidoS;
    private javax.swing.JButton Atras;
    private com.toedter.calendar.JDateChooser FAlta;
    private com.toedter.calendar.JDateChooser FCirugia;
    private com.toedter.calendar.JDateChooser FIngreso;
    private javax.swing.JButton Familiar;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton Limpiar;
    private javax.swing.JTextArea MIngreso;
    private javax.swing.JButton Medico;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField RFC;
    private javax.swing.JComboBox<String> camas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.ButtonGroup sex;
    private javax.swing.JRadioButton sexFem;
    private javax.swing.JRadioButton sexMas;
    private javax.swing.ButtonGroup sexNac;
    private javax.swing.JRadioButton sexNacFem;
    private javax.swing.JRadioButton sexNacMas;
    private javax.swing.JRadioButton sexNacOt;
    private javax.swing.JRadioButton sexOt;
    // End of variables declaration//GEN-END:variables
}
